.loaded {
  .main-wrapper {
    display: none;
  }

  .icon-load {
    display: block;
  }
}

.icon-load {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 160px;
  height: 160px;

  img {
    display: block;
    width: 100%;
    height: 100%;
  }
}

.main-wrapper {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;

  min-width: 320px;
  width: 100%;
  min-height: 100%;
  overflow: hidden;
  padding: 0;
  position: relative;
  transition: $transition-base;
}

.row {
  &:after {
    display: none;
  }

  &.clearfix:after {
    display: block;
  }
}

.section {
  position: relative;
}

.section-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;

  &:after {
    content: '';
    @extend .section-bg;
    opacity: .6;
    background: $main-second-color;
    z-index: 0;
  }

  &__img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
}

.swiper-container {
  width: 100%;

  .swiper-controls {
    display: none;
  }

  .swiper-arrows {
    outline: none !important;
  }

  .swiper-button {
    &-prev {
      display: none;
    }

    &-next {
      display: none;
    }
  }

  .swiper-pagination {
    display: none;
    outline: none !important;
  }
}

.swiper-container-initialized {
  .swiper-controls {
    display: block;
  }

  .swiper-button {
    &-prev {
      display: block;
    }

    &-next {
      display: block;
    }
  }

  .swiper-pagination {
    display: inline-block;
  }
}

.swiper-wrapper {
  width: 100%;

  img[data-src] {
    opacity: 1;
  }
}

.jq-selectbox {
  .jq-selectbox {
    &__select {
      height: 100%;
      padding: 10px 34px 10px 22px;
      border-radius: 0;
      font-family: $font-family-base;
      font-size: 16px;
      background: none;
      box-shadow: none;
      text-shadow: none;

      &-text {

      }
    }

    &__trigger {
      width: 45px;
      border: 0;

      &-arrow {
        position: absolute;
        top: 50%;
        right: auto;
        left: 50%;
        width: 12px;
        height: 12px;
        border: 2px solid #a1a1a1;
        border-left: 0;
        border-bottom: 0;
        transform: translate(-50%, -50%) rotate(45deg);
        transition: $transition-base;
      }
    }

    &__dropdown {
      background: #f0f0f0;
      border-top: 0;
      border-radius: 0;

      ul {

      }

      li {
        padding: 0 23px;
        color: #728fbf;
        font-size: 16px;
        line-height: 50px;

        &.sel {
        }

        &.selected {
          color: $main-second-color;
          background: white;
        }

        &:hover {
          color: $main-second-color;
          background: white;
        }
      }
    }
  }

  &.opened {
    .jq-selectbox__trigger-arrow {
      border-color: $main-first-color;
      transform: translate(-50%, -50%) rotate(135deg);
    }
  }
}

.font-weight-medium {
  font-weight: 500 !important;
}

.font-weight-sbold {
  font-weight: 600 !important;
}

.btn {
  position: relative;
  overflow: hidden;
  z-index: 0;

  &-primary {
    &:before, &:after {
      content: '';
      position: absolute;
      height: 100%;
      width: 100%;
      bottom: 100%;
      left: 0;
      background: #e6b300;
      z-index: -1;
      transition: $transition-base;
    }

    &:after {
      background: #dead00;
    }

    &:hover {
      background: $primary;

      &:after {
        -webkit-transition-delay: .2s;
        transition-delay: .2s;
      }

      &:before, &:after {
        transform: translateY(100%);
      }
    }
  }

  &.btn-custom {
    padding: 12px 30px;
  }
}

.breadcrumb {
  &-item {
    font-size: 14px;

    &.active {
      color: #418dcb;
    }

    a {
      color: #a7a7a7;
    }

    & + .breadcrumb-item {
      padding-left: .25rem;

      &:before {
        padding-right: .25rem;
      }
    }
  }
}

article {
  overflow: hidden;
}

.modal-custom {
  .close {
    position: absolute;
    top: 13px;
    right: 13px;
    padding: 0;
    border: none;
    margin: 0;
    overflow: hidden;
    background: none;

    svg {
      width: 21px;
      height: 21px;
      fill: #cecece;
    }
  }

  hr {
    width: 41px;
    height: 4px;
    background: $main-first-color;
  }

  .modal-review-content {
    .reserve-form-content {
      .form-group {
        margin: 0 0 5px;
      }

      textarea {
        min-width: 100%;
        width: 100%;
        max-width: 100%;
        min-height: 150px;
        height: 150px;
        max-height: 250px;
      }
    }
  }

  .reserve-form-content {
    .form-group {
      margin: 0 0 11px;
    }

    label {
      margin: 0 0 7px;
    }

    .form-control-lg {
      height: 45px;
    }
  }

  .modal-content {
    width: auto;
    max-width: 650px;
    padding: 40px 45px 45px;
    margin: 0 auto;

    &.modal-answer {
      max-width: 375px;
      padding: 45px 45px 30px;
      text-align: center;

      .modal-header {
        margin: 0;
      }

      .modal-title {
        font-size: 25px;
      }

      .modal-body {
        padding: 0;

        p {
          color: #727272;
        }
      }
    }
  }

  .modal-header {
    padding: 0;
    border: none;
    margin: 0 0 38px;
  }

  .modal-title {
    margin: 0 auto;
    font-family: $font-family-custom;
    font-size: 30px;
  }

  .reviews-rating {
    .rating-container {
      .star {
        width: 23px;
        margin: 0 1px;

        svg {
          width: 23px;
          height: 20px;
        }
      }
    }
  }
}

.datepicker {
  //border: 1px solid #555555;
  //border-radius: 5px;

  &.datepicker-dropdown {
    padding: 1rem;
  }

  &.datepicker-inline {
    width: 100%;
    max-width: 310px;
    height: 100%;
    padding: 10px 20px;
    margin: 0 auto;
  }

  table {
    height: 100%;

    tr {
      th, td {
        vertical-align: middle;
        font-size: 14px;
        text-align: center;
        transition: $transition-base;
      }

      th {
        &.prev {
          text-align: left;
        }

        &.next {
          text-align: right;
        }

        &.prev, &.next {
          svg {
            display: inline-block;
            width: 14px;
            height: 14px;
            fill: #a1a1a1;
            vertical-align: baseline;
          }

          &.disabled {
            opacity: 0;
            visibility: hidden;
          }

          &:hover {
            background: none;
          }
        }

        &.datepicker-switch {
          font-family: $font-family-custom;
          font-weight: $font-weight-normal;
          font-size: 20px;
        }

        &.dow {
          padding: 23px 0;
          color: #727272;
          font-family: $font-family-base;
          font-weight: $font-weight-base;
        }
      }

      td {
        width: 38px;
        height: 38px;
        border-radius: 50%;

        &.day {
          color: $main-second-color;
          font-weight: $font-weight-medium;

          &:hover {
            cursor: pointer;
            color: $main-second-color;
            background: $main-first-color;
          }

          &.old, &.new {
            color: #9b9b9b;
            font-weight: $font-weight-base;
          }

          &.today {
            color: $main-second-color;
            background: #9092b2;
          }

          &.active.active {

            &.old, &.new {
              color: #9b9b9b;
            }
          }

          &.selected {

          }

          &.disabled {
            color: #9b9b9b;
            cursor: not-allowed;
            font-weight: $font-weight-base;

            &:hover {
              color: #9b9b9b;
              cursor: not-allowed;
              font-weight: $font-weight-base;
              background: transparent;
            }
          }

          &.disabled-date {
            border-radius: 25px 0 0 25px;
            background: #ffd5d5 !important;

            & + .disabled-date {
              border-radius: 0;
            }

            &:first-of-type {
              border-raius: 25px 0 0 25px;
            }

            &:last-of-type {
              border-radius: 0 25px 25px 0;
            }

            &:only-child {
              border: 3px solid green;
              border-radius: 25px !important;
              background: blue;
            }

            &:hover {
              background: #ffd5d5;
            }
          }

          &.range-start {
            border-radius: 25px 0 0 25px;
            background: $main-first-color;
          }

          &.range {
            border-radius: 0;
            background: #fff2c3;

            &:first-of-type {
              border-radius: 25px 0 0 25px;
            }

            &:last-of-type {
              border-radius: 0 25px 25px 0;
            }
          }

          &.range-end {
            border-radius: 0 25px 25px 0;
            background: $main-first-color;
          }

          &.range-start.range-end {
            border-radius: 25px;
          }
        }
      }
    }
  }

  .datepicker {
    & > * {
      height: 100%;
    }

    &-days {}

    &-month {}

    &-years {}

    &-decades {}

    &-centuries {}
  }
}

.scroll-top {
  cursor: pointer;
  position: fixed;
  right: 30px;
  bottom: 30px;
  display: inline-block;
  width: 40px;
  height: 40px;
  padding: 10px;
  border: 3px solid $main-second-color;
  border-radius: 50px;
  opacity: 0;
  visibility: hidden;
  background: rgba(243, 189, 0, .5);
  transform: rotate3d(1, 0, 0, 90deg);
  transition: $transition-base;
  z-index: 1000;

  &.show {
    opacity: 1;
    visibility: visible;
    transform: rotate3d(0, 0, 0, 0deg);
  }

  svg {
    display: block;
    width: 100%;
    height: 100%;
    fill: $main-second-color;
    transition: $transition-base;
  }

  &:hover {
    border-color: $main-first-color;
    background: $main-second-color;

    svg {
      fill: $main-first-color;
    }
  }
}

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-yiq($background);
  @include gradient-bg($background);
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  &:before {
    background: $active-background;
  }

  &:after {
    background: $hover-background;
  }

  @include hover {
    color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    } @else {
      box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      }
    }
  }
}